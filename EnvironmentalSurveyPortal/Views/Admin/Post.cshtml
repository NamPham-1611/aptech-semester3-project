@model EnvironmentalSurveyPortal.Models.Post
@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    ViewBag.Title = "Article of " + @Model.User.UID;
    ViewBag.Back = "/Admin/Posts/" + Model.CompetitionID;
}

<link rel="stylesheet" type="text/css" href="~/Content/quill.snow.css">
<script src="~/Scripts/quill.min.js"></script>
<div id="content">
    <div class="container">
        <div class="card o-hidden border-0 shadow-lg mt-3 mb-5">
            <div class="card-header bg-primary p-5 text-white">
                <div class="d-flex justify-content-between">
                    <h4>@Model.Competition.Name</h4>
                    <div class="form-inline">
                        <label class="h5 mr-1">Score</label>
                        <input type="text" id="score" class="post-score" value="@Model.Score" />
                    </div>
                </div>
                <div>
                    @Html.Raw(Model.Competition.Content)
                </div>
            </div>
            <div class="card-body p-5">
                <div class="text-dark">
                    @Html.Raw(Model.Content)
                </div>

                <div class="text-right mt-5">
                    <span class="mb-0 text-gray-600 d-inline-flex text-center">
                        Article of @Model.User.Role <br />
                        @Model.User.UID - @Model.User.Name
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                } else if (this.hasOwnProperty("oldValue")) {
                    this.value = this.oldValue;
                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                }
            });
        });
    }

    setInputFilter(document.getElementById("score"), function (value) {
        var x = /^\d*\.?\d*$/.test(value) && value >= 0 && value <= 100;
        return x;
    });

    $("#score").change(function () {
        var score = this.value;

        $.post(
            "/Admin/UpdateScore",
            {
                postID: @Model.ID,
                score: score
            },
            function (res) {
                Toast.fire({
                    type: 'success',
                    title: 'Scores have been updated'
                });
            }
        );
    });
</script>